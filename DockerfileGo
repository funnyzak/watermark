FROM --platform=$BUILDPLATFORM golang:alpine as builder

ARG TARGETPLATFORM
ARG BUILDPLATFORM

ENV CGO_ENABLED=0 GOOS=linux

WORKDIR /app

COPY cmd/srv/ .
COPY dist/ ./dist/

RUN if [ -z "$(ls -A ./dist)" ]; then \
  echo "dist is empty"; \
  exit 1; \
fi

RUN --mount=type=cache,target=/root/.cache/go-build \
  --mount=type=cache,target=/go/pkg \
  rm -rf /var/cache/apk/* && \
  \
  go mod download && \
  \
  if [ "$TARGETPLATFORM" = "linux/amd64" ]; then \
    go build -o watermark main.go; \
  elif [ "$TARGETPLATFORM" = "linux/arm64" ]; then \
    GOARCH=arm64 go build -o watermark main.go; \
  elif [ "$TARGETPLATFORM" = "linux/arm/v7" ]; then \
    GOARCH=arm go build -o watermark main.go; \
  else \
    echo "Unsupported platform: $TARGETPLATFORM"; \
    exit 1; \
  fi

FROM scratch

WORKDIR /app

COPY --from=builder /app/watermark .
COPY --from=builder /app/dist/ ./dist/

EXPOSE 80

ENTRYPOINT ["./watermark", "-p", "80", "-s", "./dist"]
